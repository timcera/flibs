# buildscript.inp --
#     Define the names of the source files to be handled and the error messages
#     that should be printed if building the program fails (note: not always
#     a negative thing - the compiler may be checking questionable practices)
#
#     TODO:
#     - maybe a descriptive string after the file name?
#     - count the number of sucessfully created programs
#
#     - execute_command_line
#     - get_command_argument
#     - array operations on large arrays (temporaries can exhaust the stack)
#     - UNICODE
#     - object-oriented features (a.o. finalisers)
#     - parametrised derived types
#     - user-defined derived type output
#     - type(integer)
#     - ISO_C_BINDING, IO_FORTRAN_ENV, IEEE_ARITHMETIC (details)
#     - IEEE_ARITHMETIC: which features are supported?
#     - use, intrinsic
#     - new intrinsic routines (most mathematical functions implemented - norm2 and hypot still to be done)
#     - reading incomplete text files
#     - real(dp) with "accurate" single-precision constant
#     - real(sp) with double-precision constant
#     - handling files CRLF or LF
#     - support for DECIMAL, ROUND and SIGN
#     - (diagnostic) array size mismatch with subroutine (using fixed size in subroutine)
#     - (diagnostic) character length size mismatch with subroutine (using fixed length in subroutine)
#     - (diagnostic) interface check for subroutine (in same file, not in module)
#     - (diagnostic) external subroutine versus external function
#     - (diagnostic) Holleriths
#     - automatic definition derived types: type x; integer :: y = 1 end type - reset on entry into a subroutine?
#       --> extend this program
#     - Z format to get "strange" characters in?
#     - "all" features in the overview tables from Fortran Forum
#     - static versus automatic for local variables
#     - tab characters in input - how does it react?
#
#     - array constructor like ['A', 'BC', 'DEF'] - force a length?
#
#     - extend chk_flush_check - check that the file is not flushed if no flush used.
#     - extend chk_stream_access - position, determine unit of position
#
@chk_newunit
The compiler does not support OPEN( NEWUNIT = ... )

@chk_block
The compiler does not support the BLOCK ... END BLOCK construct

@chk_longint
The compiler does not support integers with a range larger than default

@chk_quadreal
The compiler does not support reals with a precision larger than double precision

@chk_quadcomplex
The compiler does not support complex numbers with a precision larger than double precision

@chk_opentwice
Error compiling the program - check the code

@chk_associate
The compiler does not support the ASSOCIATE ... END ASSOCIATE construct

@chk_allocstring
The compiler does not support character strings with allocatable length

@chk_allocstring_deriv
The compiler does not support derived types with allocatable-length character strings

@chk_auto_realloc
Error compiling the program - check the code

@chk_diff_lengths
The compiler does not support array constructors containing strings of different lengths

@chk_do_concurrent
The compiler does not support the DO CONCURRENT ... ENDDO construct

@chk_square_brackets
The compiler does not support square brackets for array constructors

@chk_internal_routine_arg
The compiler does not support passign internal routines as actual arguments

@chk_format_static
The compiler statically detects type errors in the format to a WRITE statement

@chk_bessel
The compiler does not support the Bessel functions (intrinsic functions in Fortran 2008)

@chk_erf
The compiler does not support all of the error functions (intrinsic functions in Fortran 2008)

@chk_gamma
The compiler does not support the Gamma functions (intrinsic functions in Fortran 2008)

@chk_norm2_hypot
The compiler does not support the NORM2 or HYPOT functions (intrinsic functions in Fortran 2008)

@chk_g0_format
The compiler does not support the G0 format

@chk_array_bound_static
The compiler does a static check on array bounds

@chk_end_of_line
The compiler does not support stream access
This program cannot check this particular feature

@chk_flush
The compiler does not support the FLUSH statement

@chk_flush_check
The compiler does not support the FLUSH statement or it does not
support the intrinsic routines get_command_argument or execute_command_line
(see the program code)

@chk_advance_no
The compiler does not support the ADVANCE= option to the WRITE statement

@chk_get_env
The compiler does not support the GET_ENVIRONMENT_VARIABLE subroutine

@chk_fortran_env
The compiler does not support the ISO_FORTRAN_ENV intrinsic module

@chk_iso_fortran_kinds
The compiler does not support the ISO_FORTRAN_ENV intrinsic module or it does
not support the kinds arrays defined by Fortran 2008

@chk_iso_fortran_storage
The compiler does not support the ISO_FORTRAN_ENV intrinsic module or it does
not support the storage parameters defined by Fortran 2008

@chk_compiler_version
The compiler does not support the intrinsic routines COMPILER_VERSION
and COMPILER_OPTIONS

@chk_allocate_source
The compiler does not support the SOURCE argument to ALLOCATE

@chk_allocate_mold
The compiler does not support the MOLD argument to ALLOCATE

@chk_decimal_io
The compiler does not support the DECIMAL specifier in READ/WRITE statements

@chk_stream_access
The compiler does not support stream accesss

@chk_protected
The compiler does not support the PROTECTED attribute

@chk_protected_set
The compiler either does not support the PROTECTED attribute or
it flags attempts to set protected module variables as errors

@chk_character_func
The compiler does not support functions returning strings with
allocatable length

@chk_unused_variable
The compiler seems to regard unused variables as an error

@chk_unused_argument
The compiler seems to regard unused arguments as an error

@chk_interface_mismatch
The compiler seems to regard interface mismatches to be an error

@chk_contiguous
The compiler does not support the CONTIGUOUS attribute

@chk_constructor_mismatch
The compiler regards shape mismatches at array assignment as an error

@chk_move_alloc
The compiler does not support the MOVE_ALLOC intrinsic subroutine

@chk_submodule
The compiler does not support submodules

@chk_int_too_large
The compiler does not accept integer values exceeding the limits

@chk_real_literal
Please check the error messages - the code should be acceptable

@chk_dim_7
The compiler does not support arrays with seven dimensions or more

@chk_dim_15
The compiler does not support arrays with 15 dimensions or more

@chk_long_statement
The compiler does not support statements of 40 lines or longer

@chk_init_derived
Please check the error messages - the code should be acceptable
